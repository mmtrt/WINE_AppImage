# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Build at 00:00 on every 12th day-of-month.
  # schedule:
  #   - cron: "0 0 */12 * *"
  # Triggers the workflow on push or pull request events but only for the wineaiso-test branch
  push:
    branches: [ wineaiso-test ]
    paths-ignore: [ '**/README.md' ]
  pull_request:
    branches: [ wineaiso-test ]
    paths-ignore: [ '**/README.md' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-devel"
  build-devel:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Prerequisites
        run: |
          sudo apt update && sudo apt install libfuse2 patchelf tree -y
          wget -q "https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.1.0/appimage-builder-1.1.0-x86_64.AppImage" -O appimage-builder ; chmod +x appimage-builder 
          mkdir -p /usr/share/icons/hicolor/scalable/ ; cp wine.svg /usr/share/icons/hicolor/scalable/
          wget -q "https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage" -O appimagetool ; chmod a+x appimagetool
          # devel
          echo "WINE_VER=devel_9.22" >> $GITHUB_ENV
          echo "UPINFO=$(grep -Eo update-info.* wine-devel.yml | awk '{print $2}')"  >> $GITHUB_ENV

          # wineasio
          git clone --recursive https://github.com/mmtrt/wineasio.git --depth=1 -b main

          cd wineasio/docker
          bash build.sh
          cd ..
          tree .

      # Runs a set of commands using the runners shell
      - name: Build appimage
        run: |
          # pull glibc version from archlinux packages web
          sed -i "s|x.xx|$(wget -qO- https://archlinux.org/packages/core/x86_64/glibc/ | grep glibc | awk '{print $5}' | cut -d'+' -f1 | head -1)|" wine-devel.yml

          ./appimage-builder --skip-appimage --recipe wine-devel.yml
          find ${GITHUB_WORKSPACE}/AppDir/runtime/compat/lib/i386-linux-gnu/ -iname 'libz**' | xargs -i -t -exec cp {} ${GITHUB_WORKSPACE}/AppDir/usr/lib/i386-linux-gnu/
          find ${GITHUB_WORKSPACE}/AppDir/runtime/compat/lib/x86_64-linux-gnu/ -iname 'libz**' | xargs -i -t -exec cp {} ${GITHUB_WORKSPACE}/AppDir/usr/lib/x86_64-linux-gnu/
          find ${GITHUB_WORKSPACE}/AppDir/runtime/compat/usr/lib/i386-linux-gnu/ -iname 'libstdc**' | xargs -i -t -exec cp {} ${GITHUB_WORKSPACE}/AppDir/usr/lib/i386-linux-gnu/
          chmod +x wine.sh
          ./wine.sh
          cd ./AppDir/runtime/compat/lib/i386-linux-gnu/
          ln -rsf ld-linux.so.2 ${GITHUB_WORKSPACE}/AppDir/runtime/default/lib/
          cd ${GITHUB_WORKSPACE}
          ARCH=x86_64 ./appimagetool --comp zstd --mksquashfs-opt -Xcompression-level --mksquashfs-opt 22 -n -u ${UPINFO} AppDir/ wine-${WINE_VER}-x86_64.AppImage
      - name: release
        uses: marvinpinto/action-automatic-releases@6273874b61ebc8c71f1a61b2d98e234cf389b303
        with:
          title: wineaiso test build
          automatic_release_tag: test-wineaiso
          prerelease: false
          draft: false
          files: /home/runner/work/WINE_AppImage/WINE_AppImage/*.AppImage*
          repo_token: ${{ secrets.GITHUB_TOKEN }}
